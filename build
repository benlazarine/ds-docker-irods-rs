#!/bin/bash
#
# Usage:
#  build [options]
#
# This program builds the ds-irods-rs-onbuild image that forms the base image
# for CyVerse Data Store resource server images. Each build is tagged with the
# number ISO 8601 style build time.
#
# Options:
#  -p, --push  push the new image to Dockerhub


set -e

readonly ExecPath=$(readlink --canonicalize "$0")
readonly ExecName=$(basename "$ExecPath")
readonly BaseDir=$(dirname "$ExecPath")


main()
{
  local opts
  if ! opts=$(getopt --longoptions push --name "$ExecName" --options p -- "$@")
  then
    printf 'failed to parse command line\n' >&2
    return 1
  fi

  eval set -- "$opts"

  local push=0

  while true
  do
    case "$1" in
      -p|--push)
        push=1
        shift
        ;;
      --)
        shift
        break
        ;;
      *)
        printf 'unknown option: %s\n' "$1" >&2
        return 1
        ;;
    esac
  done

  local tag
  tag=$(date --utc '+%Y-%m-%dT%H-%M-%S')

  build_cyverse_rs_prereqs
  build_image ds-irods-rs-onbuild latest "$tag" "$push"
}


build_cyverse_rs_prereqs()
{
  "$BaseDir"/irods-netcdf-build/build centos7
  cp "$BaseDir"/irods-netcdf-build/packages/centos7/*.rpm "$BaseDir"/ds-irods-rs-onbuild/plugins/

  "$BaseDir"/irods-setavu-plugin/build centos7

  cp "$BaseDir"/irods-setavu-plugin/libraries/centos7/libmsiSetAVU.so \
     "$BaseDir"/ds-irods-rs-onbuild/plugins/
}


build_image()
{
  local name="$1"
  local currentTag="$2"
  local newTag="$3"
  local push="$4"

  local currentImage=cyverse/"$name":"$currentTag"
  local newImage=cyverse/"$name":"$newTag"

  docker pull "$currentImage" 2> /dev/null || true
  docker build --file "$name".dockerfile --tag "$newImage" "$BaseDir"/"$name"

  local latestId
  latestId=$(docker image inspect "$currentImage" 2> /dev/null | jq .[0].Id)

  local newId
  newId=$(docker image inspect "$newImage" | jq .[0].Id)

  if [[ "$newId" != "$latestId" ]]
  then
    docker tag "$newImage" "$currentImage"

    if [[ "$push" -ne 0 ]]
    then
      docker push "$newImage"
      docker push "$currentImage"
    fi
  else
    docker rmi "$newImage"
  fi
}


main "$@"
